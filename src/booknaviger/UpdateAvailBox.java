/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package booknaviger;

import booknaviger.errorhandler.KnownErrorBox;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;

/**
 *
 * @author Inervo
 */
public class UpdateAvailBox extends javax.swing.JDialog {

    private String updateURL = "http://software.inervo.fr/";
    private String newVersion = null;

    /**
     * Constructeur de l'IndexFilePosition
     * @param frame Frame parente
     * @param newVersion nouveau numéro de version disponible
     */
    public UpdateAvailBox(java.awt.Frame frame, String newVersion) {
        super(frame, true);
        this.newVersion = newVersion;
        initComponents();
        getRootPane().setDefaultButton(okButton);
        this.setLocationRelativeTo(this.getParent());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogoLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        URLTextAreaScrollPane = new javax.swing.JScrollPane();
        URLTextArea = new javax.swing.JTextArea();
        goButton = new javax.swing.JButton();
        copyButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(booknaviger.BookNavigerApp.class).getContext().getResourceMap(UpdateAvailBox.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        LogoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LogoLabel.setIcon(resourceMap.getIcon("LogoLabel.icon")); // NOI18N
        LogoLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        LogoLabel.setName("LogoLabel"); // NOI18N

        infoLabel.setText(resourceMap.getString("infoLabel.text", newVersion));
        infoLabel.setName("infoLabel"); // NOI18N

        URLTextAreaScrollPane.setName("URLTextAreaScrollPane"); // NOI18N

        URLTextArea.setEditable(false);
        URLTextArea.setText(updateURL);
        URLTextArea.setMargin(new java.awt.Insets(0, 10, 0, 10));
        URLTextArea.setName("URLTextArea"); // NOI18N
        URLTextAreaScrollPane.setViewportView(URLTextArea);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(booknaviger.BookNavigerApp.class).getContext().getActionMap(UpdateAvailBox.class, this);
        goButton.setAction(actionMap.get("goToURL")); // NOI18N
        goButton.setText(resourceMap.getString("goButton.text")); // NOI18N
        goButton.setName("goButton"); // NOI18N

        copyButton.setAction(actionMap.get("copyURLToClipboard")); // NOI18N
        copyButton.setText(resourceMap.getString("copyButton.text")); // NOI18N
        copyButton.setToolTipText(resourceMap.getString("copyButton.toolTipText")); // NOI18N
        copyButton.setName("copyButton"); // NOI18N

        okButton.setAction(actionMap.get("quit")); // NOI18N
        okButton.setName("okButton"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(186, Short.MAX_VALUE)
                .add(goButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(copyButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(okButton)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .add(LogoLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(infoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE))
            .add(URLTextAreaScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(infoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(LogoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(URLTextAreaScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(okButton)
                    .add(copyButton)
                    .add(goButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Executé lors de la sortie de la fenêtre
     */
    @Action
    public void quit() {
        setVisible(false);
        URLTextArea.setText(null);
        dispose();
    }

    /**
     * Copie le contenu de la zone de texte dans le presse-papier
     */
    @Action
    public void copyURLToClipboard() {
        URLTextArea.selectAll();
        URLTextArea.copy();
    }

    @Action
    public void goToURL() {
        if (Desktop.isDesktopSupported()) {
            try {
                Desktop desktop = Desktop.getDesktop();
                if (desktop.isSupported(Desktop.Action.BROWSE)) {
                    desktop.browse(new URI(URLTextArea.getText()));
                    return;
                }
            } catch (IOException ex) {
            } catch(URISyntaxException ex) {
                Logger.getLogger(UpdateAvailBox.class.getName()).log(Level.SEVERE, "Malformed URL", ex);
            }
        }
        new KnownErrorBox(null, KnownErrorBox.WARNING_lOGO, "Warning_Unavailable_Feature");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LogoLabel;
    private javax.swing.JTextArea URLTextArea;
    private javax.swing.JScrollPane URLTextAreaScrollPane;
    private javax.swing.JButton copyButton;
    private javax.swing.JButton goButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

}
