/*
 */
package booknaviger.booksfolder;

import booknaviger.MainInterface;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Used to select a folder
 * @author Inervo
 */
public class BooksFolderSelector extends javax.swing.JDialog {

    /**
     * Creates new form BooksFolderSelector
     * @param parent the parent frame
     * @param modal is this dialog modal
     */
    public BooksFolderSelector(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        Logger.getLogger(BooksFolderSelector.class.getName()).entering(BooksFolderSelector.class.getName(), "BooksFolderSelector", new Object[] {parent, modal});
        initComponents();
        Logger.getLogger(BooksFolderSelector.class.getName()).exiting(BooksFolderSelector.class.getName(), "BooksFolderSelector");
    }

    /**
     * This method is called from within the constructor to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        booksFolderFileChooser = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("booknaviger/resources/BooksFolderSelector"); // NOI18N
        booksFolderFileChooser.setDialogTitle(bundle.getString("books-folder_title_jdialog")); // NOI18N
        booksFolderFileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(booksFolderFileChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(booksFolderFileChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Modification du dossier contenant les bouquins
     * @return the folder selected
     */
    public String selectFolder() {
        Logger.getLogger(BooksFolderSelector.class.getName()).entering(BooksFolderSelector.class.getName(), "selectFolder");
//        if (MacOSXApplicationAdapter.isMac()) { // Set inactive (don't work anyway) until Java7 make it work.
//            FileDialog booksFolderMacFileChooser = new FileDialog(this, "test", FileDialog.LOAD);
//            booksFolderMacFileChooser.setDirectory(System.getProperty("user.home"));
//            booksFolderMacFileChooser.setLocation(50,50);
//            booksFolderMacFileChooser.setVisible(true);
//            if (booksFolderMacFileChooser.getDirectory() != null) {
//                String folderName = booksFolderMacFileChooser.getDirectory();
//                System.out.println("folderName = " + folderName);
//                folderName += booksFolderMacFileChooser.getFile();
//                System.out.println("folderName2 = " + folderName);
//            }
//        } else {
            String currentDirectoryString = MainInterface.getInstance().getProfiles().getCurrentProfileFolder();
            
            if (currentDirectoryString.equals("")) {
                booksFolderFileChooser.setCurrentDirectory(null);
            } else {
                booksFolderFileChooser.setCurrentDirectory(new File(currentDirectoryString).getParentFile());
            }
            if (booksFolderFileChooser.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION) {
                Logger.getLogger(BooksFolderSelector.class.getName()).log(Level.INFO, "Folder \"{0}\" has been selected", booksFolderFileChooser.getSelectedFile().toString());
                Logger.getLogger(BooksFolderSelector.class.getName()).exiting(BooksFolderSelector.class.getName(), booksFolderFileChooser.getSelectedFile().toString());
                return booksFolderFileChooser.getSelectedFile().toString();
            }
            Logger.getLogger(BooksFolderSelector.class.getName()).exiting(BooksFolderSelector.class.getName(), null);
            return null;
//        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser booksFolderFileChooser;
    // End of variables declaration//GEN-END:variables
}
